version: 2

jobs:
  check:
    docker:
      # https://github.com/docker-library/python/issues/155
      # - image: python:3.6.2-alpine3.6
      - image: python:3.6.2
    steps:
      - checkout
      - run: python -m pip install pre-commit
      - run: pre-commit run --all-files

  client-test:
    docker:
      - image: node:8.4.0
    steps:
      - checkout
      - run:
          name: npm install
          command: |
            cd client/
            npm install
      - run:
          name: npm run lint
          command: |
            cd client/
            npm run lint
      - run:
          name: npm run flow
          command: |
            cd client/
            npm run flow
      - run:
          name: npm run test
          command: |
            cd client/
            npm run test

  client-image:
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - checkout
      - setup_remote_docker
      - run: docker build -t client client/
      - deploy:
          name: push image (hash)
          command: |
            docker login -u ${DOCKER_USER} -p ${DOCKER_PASS}
            docker tag client "thekevjames/you-should-read-client:${CIRCLE_BRANCH}-${CIRCLE_SHA1:0:8}"
            docker push "thekevjames/you-should-read-client:${CIRCLE_BRANCH}-${CIRCLE_SHA1:0:8}"
      - deploy:
          name: push image (branch)
          command: |
            docker login -u ${DOCKER_USER} -p ${DOCKER_PASS}
            docker tag client "thekevjames/you-should-read-client:${CIRCLE_BRANCH}"
            docker push "thekevjames/you-should-read-client:${CIRCLE_BRANCH}"
      - deploy:
          name: push image (latest)
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              docker login -u ${DOCKER_USER} -p ${DOCKER_PASS}
              docker tag client thekevjames/you-should-read-client:latest
              docker push thekevjames/you-should-read-client:latest
            fi

  database:
    docker:
      - image: debian:stretch-slim
      - image: postgres:9.6.2-alpine
    steps:
      - run:
          name: install dependencies
          command: |
            # https://github.com/resin-io-library/base-images/issues/273
            mkdir -p /usr/share/man/man1 /usr/share/man/man7
            apt-get update -qy
            apt-get install -qy sqitch
      - checkout
      - run:
          name: verify migrations
          command: |
            cd database/
            sqitch deploy --verify

  server-image:
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - checkout
      - setup_remote_docker
      - run: docker build -t server server/
      - deploy:
          name: push image (hash)
          command: |
            docker login -u ${DOCKER_USER} -p ${DOCKER_PASS}
            docker tag server "thekevjames/you-should-read-server:${CIRCLE_BRANCH}-${CIRCLE_SHA1:0:8}"
            docker push "thekevjames/you-should-read-server:${CIRCLE_BRANCH}-${CIRCLE_SHA1:0:8}"
      - deploy:
          name: push image (branch)
          command: |
            docker login -u ${DOCKER_USER} -p ${DOCKER_PASS}
            docker tag server "thekevjames/you-should-read-server:${CIRCLE_BRANCH}"
            docker push "thekevjames/you-should-read-server:${CIRCLE_BRANCH}"
      - deploy:
          name: push image (latest)
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              docker login -u ${DOCKER_USER} -p ${DOCKER_PASS}
              docker tag server thekevjames/you-should-read-server:latest
              docker push thekevjames/you-should-read-server:latest
            fi

  client-deploy:
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - deploy:
          name: deploy client image
          command: |
            ssh -oStrictHostKeyChecking=no ubuntu@thekev.in "
              docker service update --image thekevjames/you-should-read-client:latest thekevjames_ysr_client
            "

  database-deploy:
    docker:
      - image: debian:stretch-slim
    steps:
      - run:
          name: install dependencies
          command: |
            # https://github.com/resin-io-library/base-images/issues/273
            mkdir -p /usr/share/man/man1 /usr/share/man/man7
            apt-get update -qy
            apt-get install -qy apt-transport-https ca-certificates gnupg2 software-properties-common sqitch wget
            wget -qO- https://cli-assets.heroku.com/install-ubuntu.sh | sh
      - run:
          name: configure Heroku
          command: |
            cat > ~/.netrc << EOF
            machine api.heroku.com
              login ${HEROKU_USER}
              password ${HEROKU_API_KEY}
            EOF
      - checkout
      - run:
          name: get database connection
          command: |
            echo "export DATABASE_URL=$(heroku pg:credentials:url --app you-should-read | tail -n1 | sed -E 's/[[:space:]]+postgres/pg/')" >> ${BASH_ENV}
      - deploy:
          name: apply migrations
          command: |
            cd database/
            sqitch deploy --verify db:${DATABASE_URL}

  server-deploy:
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - deploy:
          name: deploy server image
          command: |
            ssh -oStrictHostKeyChecking=no ubuntu@thekev.in "
              docker service update --image thekevjames/you-should-read-server:latest thekevjames_ysr_server
            "

  github-release:
    docker:
      - image: python:3.6.2-alpine3.6
    steps:
      - run: apk add --no-cache curl git openssh-client
      - checkout
      - run: curl -L https://github.com/aktau/github-release/releases/download/v0.7.2/linux-amd64-github-release.tar.bz2 | tar xj
      - run: curl -L https://github.com/clog-tool/clog-cli/releases/download/v0.9.3/clog-v0.9.3-x86_64-unknown-linux-musl.tar.gz | tar xz
      - deploy:
          name: create GitHub release
          command: |
            ./bin/linux/amd64/github-release release -t "${CIRCLE_TAG}" || true
            ./clog -F --setversion ${CIRCLE_TAG} | ./bin/linux/amd64/github-release edit -t ${CIRCLE_TAG} -d -

workflows:
  version: 2
  check-build-and-deploy:
    jobs:
      - check:
          filters:
            tags:
              only: /.*/

      - client-test:
          filters:
            tags:
              only: /.*/
          requires:
            - check
      - client-image:
          context: org-global
          filters:
            tags:
              only: /.*/
          requires:
            - client-test
      - client-deploy:
          context: org-global
          filters:
            branches:
              only: master
            tags:
              only: /.*/
          requires:
            - client-image

      - database:
          context: org-global
          filters:
            tags:
              only: /.*/
          requires:
            - check
      - database-deploy:
          context: org-global
          filters:
            branches:
              only: master
            tags:
              only: /.*/
          requires:
            - database

      - server-image:
          context: org-global
          filters:
            tags:
              only: /.*/
          requires:
            - check
      - server-deploy:
          context: org-global
          filters:
            branches:
              only: master
            tags:
              only: /.*/
          requires:
            - server-image

      - github-release:
          context: org-global
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /[0-9]+\.[0-9]+\.[0-9]+/
